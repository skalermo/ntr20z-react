{"version":3,"sources":["components/Home.js","components/BasicAlert.js","components/Teachers.js","components/TeacherForm.js","components/Activities.js","components/ActivityForm.js","App.js","reportWebVitals.js","index.js"],"names":["Home","class","to","Alert","hide","type","msg","Teachers","useState","teachers","setTeachers","hideAlert","setHideAlert","alertType","setAlertType","alertMsg","setAlertMsg","useEffect","setTimeout","fetchTeachers","fetch","then","res","json","data","catch","console","log","TeacherEntry","idx","name","pathname","state","onClick","id","method","headers","status","statusText","value","map","teacher","TeacherForm","useLocation","input","setInput","placeholder","onInput","e","target","requestOptions","body","JSON","stringify","newTeacher","addNewTeacher","updateTeacher","headerSlots","activitiesTimes","Activities","selectedGroupIdx","setSelectedGroupIdx","groups","setGroups","labels","setLabels","firstUpdate","useRef","length","current","Array","rows","fill","_","slot","activityId","undefined","label","forEach","a","room","subject","join","fetchActivities","onChange","g","i","selectedGroup","ActivityForm","selectedSlot","activity","setActivity","rooms","setRooms","subjects","setSubjects","selectedRoom","setSelectedRoom","selectedTeacher","setSelectedTeacher","selectedSubject","setSelectedSubject","saveDisabled","setSaveDisabled","getRooms","getTeachers","disabled","selected","r","s","t","newActivity","group","addNewActivity","updateActivity","Header","App","role","exact","path","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36bb1dec.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nfunction Home() {\n    return (\n        <div>\n            <div class=\"text-center\">\n                <p class=\"h3\">Welcome to the SchoolScheduler</p>\n            </div>\n\n            <div class=\"text-center\">\n                <Link class=\"btn btn-link btn-lg\" to={\"/teachers\"}>Teachers</Link >\n                <Link class=\"btn btn-link btn-lg\" to={\"/activities\"}>Activities</Link >\n            </div>\n        </div >\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst Alert = ({ hide, type, msg }) => {\n    if (hide) return null;\n    switch (type) {\n        case \"success\":\n            return (\n                <div class=\"alert alert-success\">\n                    {msg}\n                </div>\n            );\n        case \"danger\":\n            return (\n                <div class=\"alert alert-danger\">\n                    {msg}\n                </div>\n            )\n        default:\n            return null;\n    }\n}\n\nexport default Alert;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"./BasicAlert\";\n\nfunction Teachers() {\n    const [teachers, setTeachers] = useState([]);\n    const [hideAlert, setHideAlert] = useState(true);\n    const [alertType, setAlertType] = useState();\n    const [alertMsg, setAlertMsg] = useState(\"\");\n    useEffect(() => {\n        setTimeout(() => { setHideAlert(true) }, 5_000);\n    }, []);\n\n    const deleteTeacher = (id) => {\n        console.log(\"Deleting teacher: id=\" + id)\n        const requestOptions = {\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`http://localhost:8081/teachers/${id}`, requestOptions)\n            .then(res => {\n                if (res.status === 204) {\n                    fetchTeachers();\n                    setAlertType(\"success\");\n                } else {\n                    setAlertType(\"danger\");\n                }\n                setHideAlert(false);\n                setAlertMsg(res.statusText);\n            })\n            .catch(console.log)\n    }\n\n    const fetchTeachers = () => {\n        fetch(\"http://localhost:8081/teachers\")\n            .then(res => res.json())\n            .then((data) => {\n                setTeachers(data)\n            })\n            .catch(console.log)\n    }\n\n    useEffect(() => {\n        fetchTeachers();\n        // setInterval(() => fetchTeachers(), 10_000);\n    }, []);\n\n    const TeacherEntry = ({ idx, name }) => {\n        return (\n            < tr >\n                <td>\n                    {name}\n                </td>\n                <td>\n                    <Link class=\"btn btn-link\" to={{\n                        pathname: \"/teacherForm\",\n                        state: { idx, name }\n                    }}>Edit</Link>\n                    <button onClick={() => { deleteTeacher(idx) }} name=\"deleteButton\" value={idx} class=\"btn btn-link\">Delete</button>\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div>\n            < h2 >\n                Teachers\n                </h2 >\n            <Alert hide={hideAlert} type={alertType} msg={alertMsg} />\n            <Link class=\"btn btn-link\" to=\"/teacherForm\">Add new teacher</Link>\n\n            <table class=\"table table-hover\">\n                <tr>\n                    <th>\n                        Teacher\n                                </th>\n                    <th>\n                        Actions\n                                </th>\n                </tr>\n                {teachers.map((teacher, idx) => {\n                    return <TeacherEntry idx={idx} name={teacher} />;\n                })}\n            </table>\n        </div >\n    );\n\n}\n\nexport default Teachers;","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Alert from './BasicAlert';\n\nfunction TeacherForm() {\n    let idx, name;\n    let state = useLocation().state;\n    if (state && \"idx\" in state)\n        idx = state.idx;\n    if (state && \"name\" in state)\n        name = state.name;\n\n    const [input, setInput] = useState(() => { if (typeof name !== \"undefined\") return name; return '' });\n    const [hideAlert, setHideAlert] = useState(true);\n    const [alertType, setAlertType] = useState();\n    const [alertMsg, setAlertMsg] = useState(\"\");\n    useEffect(() => {\n        setTimeout(() => { setHideAlert(true) }, 5_000);\n    }, []);\n\n    const addNewTeacher = (teacher) => {\n        console.log(`Adding new teacher: ${teacher}`)\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ newTeacher: teacher }),\n        };\n        return fetch(\"http://localhost:8081/teachers\", requestOptions)\n            .then(res => {\n                console.log(res.status)\n                if (res.status === 201) {\n                    setAlertType(\"success\");\n                } else {\n                    setAlertType(\"danger\");\n                }\n                setHideAlert(false);\n                setAlertMsg(res.statusText);\n            })\n    }\n\n    const updateTeacher = (id, teacher) => {\n        console.log(`Updating teacher: #${id} ${teacher}`)\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ teacher }),\n        };\n        return fetch(`http://localhost:8081/teachers/${id}`, requestOptions)\n            .then(res => {\n                console.log(res.status)\n                if (res.status === 200) {\n                    setAlertType(\"success\");\n                } else {\n                    setAlertType(\"danger\");\n                }\n                setHideAlert(false);\n                setAlertMsg(res.statusText);\n            });\n    }\n\n    return (\n        <div>\n            <h2>Teacher Form</h2>\n            <Link class=\"btn btn-link\" to=\"/teachers\">Back to teachers list</Link>\n            <Alert hide={hideAlert} type={alertType} msg={alertMsg} />\n            <input type=\"hidden\" value={idx} />\n            <div class=\"form-group\">\n                <label>Teacher</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"John Smith\" value={input} onInput={e => setInput(e.target.value)} />\n            </div>\n            <button type=\"submit\" onClick={() => {\n                if (typeof idx === 'undefined')\n                    addNewTeacher(input);\n                else\n                    updateTeacher(idx, input);\n            }} class=\"btn btn-primary\">Submit</button>\n        </div>\n    )\n}\n\nexport default TeacherForm;","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../grid.css\"\n\nconst headerSlots = [\"time\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\"];\nconst activitiesTimes = [\n    \"8:00-8:45\", \"8:55-9:40\", \"9:50-11:35\",\n    \"11:55-12:40\", \"12:50-13:55\", \"13:45-14:30\",\n    \"14:40-15:25\", \"15:35-16:20\", \"16:30-17:15\"];\nconst rows = 9;\nconst cols = 5;\n\nfunction Activities() {\n    const [selectedGroupIdx, setSelectedGroupIdx] = useState();\n    const [groups, setGroups] = useState([]);\n    const [labels, setLabels] = useState([]);\n    const firstUpdate = useRef(true);\n\n    const fetchGroups = () => {\n        fetch(\"http://localhost:8081/groups\")\n            .then(res => res.json())\n            .then((data) => {\n                if (groups.length === 0) {\n                    setGroups(data);\n                    setSelectedGroupIdx(0);\n                }\n                setGroups(data);\n            })\n            .catch(console.log);\n    }\n\n    const fetchActivities = (selectedGroupIdx) => {\n        fetch(`http://localhost:8081/groups/${selectedGroupIdx}/activities`)\n            .then(res => res.json())\n            .then((data) => {\n                let labels = Array(rows * cols).fill().map((_, idx) => ({ slot: idx, activityId: undefined, label: \"\" }));\n                data.forEach(function ({ idx, a }) {\n                    labels[a.slot] = { slot: a.slot, activityId: idx, label: [a.room, a.subject].join(\" \") };\n                });\n                setLabels(labels);\n            })\n            .catch(console.log);\n    }\n\n    useEffect(() => {\n        fetchGroups();\n    }, [])\n    useEffect(() => {\n        if (firstUpdate.current) {\n            firstUpdate.current = false;\n        } else {\n            fetchActivities(selectedGroupIdx);\n        }\n    }, [selectedGroupIdx]);\n\n    return (\n        <div>\n            <h2>\n                Activities\n                </h2 >\n            <div class=\"modal-body\">\n                <div class=\"form-group row\">\n                    <label class=\"col-form-label\">Group</label>\n                    <div class=\"col-sm-3\">\n                        <select class=\"form-control\" onChange={e => setSelectedGroupIdx(e.target.value)}>\n                            {/* <option value=\"\" disabled selected>Select a group</option> */}\n                            {groups && groups.length && groups.map((g, idx) => {\n                                return <option value={idx}>{g}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n            {(() => {\n                if (selectedGroupIdx === undefined)\n                    return (\n                        <p>Select group to load schedule table</p>\n                    )\n                else {\n                    return (\n                        <div class=\"wrapper\">\n                            {headerSlots.map((slot) => {\n                                return (\n                                    <div class=\"slot header\">{slot}</div>\n                                )\n                            })}\n\n                            {labels && labels.map(function ({ slot, activityId, label }, i) {\n                                // console.log(i);\n                                return (() => {\n                                    if (i % cols == 0)\n                                        return (\n                                            <>\n                                                <div class=\"slot index\">{activitiesTimes[i / cols]}</div>\n                                                <Link class=\"fill-div slot\" to={{\n                                                    pathname: \"/activityForm\",\n                                                    state: { slot, activityId, selectedGroup: groups[selectedGroupIdx] }\n                                                }}>{label}</Link>\n                                            </>\n                                        )\n                                    return (\n                                        <Link class=\"fill-div slot\" to={{\n                                            pathname: \"/activityForm\",\n                                            state: { slot, activityId, selectedGroup: groups[selectedGroupIdx] }\n                                        }}>{label}</Link>\n                                    )\n                                })();\n                            })}\n                        </div>\n                    )\n                }\n            })()}\n        </div >\n    )\n}\n\nexport default Activities;","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Alert from \"./BasicAlert\";\n\nfunction ActivityForm() {\n    // 3 props may be passed:\n    // chosen slot, selected activity's id (optional), selected group\n\n    let selectedSlot;\n    let activityId;\n    let selectedGroup;\n    const [activity, setActivity] = useState();\n    const [rooms, setRooms] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [teachers, setTeachers] = useState([]);\n\n    const [selectedRoom, setSelectedRoom] = useState();\n    const [selectedTeacher, setSelectedTeacher] = useState();\n    const [selectedSubject, setSelectedSubject] = useState();\n    const [saveDisabled, setSaveDisabled] = useState(true);\n\n    const [hideAlert, setHideAlert] = useState(true);\n    const [alertType, setAlertType] = useState();\n    const [alertMsg, setAlertMsg] = useState(\"\");\n    useEffect(() => {\n        setTimeout(() => { setHideAlert(true) }, 5_000);\n    }, []);\n\n    let state = useLocation().state;\n    if (state && \"slot\" in state)\n        selectedSlot = state.slot;\n    if (state && \"activityId\" in state)\n        activityId = state.activityId;\n    if (state && \"selectedGroup\" in state)\n        selectedGroup = state.selectedGroup;\n\n    const getActivity = (id) => {\n        fetch(`http://localhost:8081/activities/${id}`)\n            .then(res => res.json())\n            .then((data) => {\n                let activity = data;\n                setActivity(activity);\n                setSelectedRoom(activity.room);\n                setSelectedSubject(activity.subject);\n                setSelectedTeacher(activity.teacher);\n            })\n            .catch(console.log)\n    };\n\n    const getRooms = (slot, activityId) => {\n        fetch(`http://localhost:8081/rooms?excludeForSlot=${slot}&includeForActivity=${activityId}`)\n            .then(res => res.json())\n            .then((data) => {\n                setRooms(data);\n            })\n            .catch(console.log)\n    }\n\n    const getTeachers = (slot, activityId) => {\n        fetch(`http://localhost:8081/teachers?excludeForSlot=${slot}&includeForActivity=${activityId}`)\n            .then(res => res.json())\n            .then((data) => {\n                setTeachers(data);\n            })\n            .catch(console.log)\n    }\n\n    const getSubjects = () => {\n        fetch(`http://localhost:8081/subjects`)\n            .then(res => res.json())\n            .then((data) => {\n                setSubjects(data);\n            })\n            .catch(console.log)\n    }\n\n    useEffect(() => {\n        getActivity(activityId);\n        getRooms(selectedSlot, activityId);\n        getTeachers(selectedSlot, activityId);\n        getSubjects();\n    }, [])\n\n    useEffect(() => {\n        if (selectedRoom && selectedTeacher && selectedSubject)\n            setSaveDisabled(false);\n    }, [selectedRoom, selectedTeacher, selectedSubject])\n\n    const addNewActivity = (activity) => {\n        console.log(`Adding new activity: ${activity}`)\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ newActivity: activity }),\n        };\n        return fetch(\"http://localhost:8081/activities\", requestOptions)\n            .then(res => {\n                console.log(res.status)\n                if (res.status === 201)\n                    setAlertType(\"success\");\n                else\n                    setAlertType(\"danger\");\n                setAlertMsg(res.statusText);\n                setHideAlert(false);\n            });\n    }\n\n    const updateActivity = (id, activity) => {\n        console.log(`Updating activity: #${id} ${activity}`)\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ activity }),\n        };\n        return fetch(`http://localhost:8081/activities/${id}`, requestOptions)\n            .then(res => {\n                console.log(res.status)\n                if (res.status === 200)\n                    setAlertType(\"success\");\n                else\n                    setAlertType(\"danger\");\n                setAlertMsg(res.statusText);\n                setHideAlert(false);\n            });\n    }\n\n    const deleteActivity = (id) => {\n        console.log(`Deleting activity: #${id}`)\n        const requestOptions = {\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`http://localhost:8081/activities/${id}`, requestOptions)\n            .then(res => {\n                console.log(res.status)\n                if (res.status === 204)\n                    setAlertType(\"success\");\n                else\n                    setAlertType(\"danger\");\n                setAlertMsg(res.statusText);\n                setHideAlert(false);\n            });\n    }\n\n    return (\n        <div>\n            <Link class=\"btn btn-link\" to=\"/activities\">Back to activities</Link>\n            <Alert hide={hideAlert} type={alertType} msg={alertMsg} />\n            <div class=\"form-group\">\n                <label>Room</label>\n                <select class=\"form-control\" onChange={e => setSelectedRoom(e.target.value)}>\n                    {(() => {\n                        if (activity === undefined)\n                            return <option disabled selected>Select room</option>\n                    })()}\n                    {rooms && rooms.map((r) => {\n                        if (r === (activity && activity.room))\n                            return <option selected>{r}</option>\n                        return <option>{r}</option>\n\n                    })}\n                </select>\n                <label>Group</label>\n                <select class=\"form-control\" disabled>\n                    {((activity) => {\n                        if (activity)\n                            return <option>{activity && activity.group}</option>\n                        return <option>{selectedGroup}</option>\n                    })()}\n                </select>\n                <label>Subject</label>\n                <select class=\"form-control\" onChange={e => setSelectedSubject(e.target.value)}>\n                    {(() => {\n                        if (activity === undefined)\n                            return <option disabled selected>Select subject</option>\n                    })()}\n                    {subjects && subjects.map((s) => {\n                        if (s === (activity && activity.subject))\n                            return <option selected>{s}</option>\n                        return <option>{s}</option>\n                    })}\n                </select>\n                <label>Teacher</label>\n                <select class=\"form-control\" onChange={e => setSelectedTeacher(e.target.value)}>\n                    {(() => {\n                        if (activity === undefined)\n                            return <option disabled selected>Select teacher</option>\n                    })()}\n                    {teachers && teachers.map((t) => {\n                        if (t === (activity && activity.teacher))\n                            return <option selected>{t}</option>\n                        return <option>{t}</option>\n\n                    })}\n                </select>\n            </div>\n\n            <button class=\"btn btn-primary mr-2\" onClick={() => {\n                let newActivity = {\n                    room: selectedRoom,\n                    group: selectedGroup,\n                    subject: selectedSubject,\n                    slot: selectedSlot,\n                    teacher: selectedTeacher,\n                    id: undefined\n                }\n                if (activity === undefined)\n                    addNewActivity(newActivity);\n                else {\n                    newActivity.id = activityId;\n                    updateActivity(activityId, newActivity);\n                }\n            }} disabled={saveDisabled}>Save</button>\n            <button class=\"btn btn-secondary\" onClick={() => { deleteActivity(activityId) }} disabled={activity === undefined}>Delete this activity</button>\n        </div >\n    )\n}\n\nexport default ActivityForm;","import React, { Component } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Teachers from \"./components/Teachers\";\nimport TeacherForm from \"./components/TeacherForm\";\nimport Activities from \"./components/Activities\";\nimport ActivityForm from \"./components/ActivityForm\";\n\nconst Header = () => {\n  return (\n    <header>\n      <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\n        <div class=\"container\">\n          <div class=\"navbar-brand\">School Scheduler</div>\n          <ul class=\"nav navbar-nav\">\n            <li>\n              <Link class=\"nav-link\" to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link class=\"nav-link\" to=\"/teachers\">Teachers</Link>\n            </li>\n            <li>\n              <Link class=\"nav-link\" to=\"/activities\">Activities</Link>\n            </li>\n          </ul>\n        </div>\n      </nav >\n    </header>\n  )\n}\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div>\n        <Header />\n\n        <div class=\"container\">\n          <main role=\"main\" class=\"pb-3\">\n            <Switch>\n              <Route exact path=\"/\"><Home /></Route>\n              <Route path=\"/teachers\"><Teachers /></Route>\n              <Route path=\"/teacherForm\"><TeacherForm /></Route>\n              <Route path=\"/activities\"><Activities /></Route>\n              <Route path=\"/activityForm\"><ActivityForm /></Route>\n              <Route path=\"/\">\n                <p>404 - Check your url please</p>\n              </Route>\n            </Switch>\n          </main>\n        </div>\n\n      </div >\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}